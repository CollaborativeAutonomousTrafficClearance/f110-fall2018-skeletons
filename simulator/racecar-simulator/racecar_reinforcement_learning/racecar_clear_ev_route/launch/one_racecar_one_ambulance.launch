<?xml version="1.0"?>
<launch>
    
    <!--Arguments-->
    <arg name="launch_world" default="false"/>
    <arg name="world_name" default="threeLanes" />
    <arg name="gui" default="false" />

    <arg name="r_name" default="racecar"/>
    <arg name="vesc_ns" default="/vesc"/>
    <arg name="vis_laser" default="true"/>

    <arg name="r_type1" default="racecar"/>
    <arg name="x_pos1" default="-36"/>
    <arg name="y_pos1" default="-0.2625"/>
    <arg name="z_pos1" default="0.05"/>
    <arg name="max_vel1" default="0.5"/>
    <arg name="max_acc1" default="0.0167"/>
    <arg name="goal_x1" default="50"/>
    <arg name="goal_y1" default="-0.2625"/>
    <arg name="ctrl_method1" default=""/>

    <arg name="r_type2" default="ambulance"/>
    <arg name="x_pos2" default="-50"/>
    <arg name="y_pos2" default="-0.2625"/>
    <arg name="z_pos2" default="0.05"/>
    <arg name="max_vel2" default="1"/>
    <arg name="max_acc2" default="0.0333"/>
    <arg name="ctrl_method2" default="_krauss_model"/>

    <arg name="comm_range" default="24"/>
    <arg name="use_comm_layer" default="false"/>


    <param name="/$(arg r_name)1/goal_x" value="$(arg goal_x1)"/>
    <param name="/$(arg r_name)1/goal_y" value="$(arg goal_y1)"/>

    <!--Launching Gazebo With The Racecar-->
    <include file="$(find racecar_gazebo)/launch/two_racecars.launch">
      <arg name="launch_world" value="$(arg launch_world)" />
      <arg name="world_name" value="$(arg world_name)" />
      <arg name="gui" value="$(arg gui)" />

      <arg name="r_name" value="$(arg r_name)"/>
      <arg name="vesc_ns" value="$(arg vesc_ns)"/>
      <arg name="vis_laser" value="$(arg vis_laser)"/>

      <arg name="r_type1" value="$(arg r_type1)"/>
      <arg name="x_pos1" value="$(arg x_pos1)"/>
      <arg name="y_pos1" value="$(arg y_pos1)"/>
      <arg name="z_pos1" value="$(arg z_pos1)"/>
      <arg name="max_vel1" value="$(arg max_vel1)"/>
      <arg name="max_acc1" value="$(arg max_acc1)"/>
      <arg name="ctrl_method1" value="$(arg ctrl_method1)"/>

      <arg name="r_type2" value="$(arg r_type2)"/>
      <arg name="x_pos2" value="$(arg x_pos2)"/>
      <arg name="y_pos2" value="$(arg y_pos2)"/>
      <arg name="z_pos2" value="$(arg z_pos2)"/>
      <arg name="max_vel2" value="$(arg max_vel2)"/>
      <arg name="max_acc2" value="$(arg max_acc2)"/>
      <arg name="ctrl_method2" value="$(arg ctrl_method2)"/>

      <arg name="comm_range" value="$(arg comm_range)"/>
    </include>


    <!-- Front steering: locate base_link at the center of the rear-axle -->
    <!-- For the cost planner -->
    <!-- See this https://answers.ros.org/question/237035/steering-axis-of-carlike-robot-with-teb_local_planner/ -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_rear_axle1"
        args="-0.155 0.0 0.0 0.0 0.0 0.0 1.0 $(arg r_name)1/base_link $(arg r_name)1/rear_axle" />


    <!--- Run map server and AMCL -->
    <include file="$(find racecar_localization)/launch/one_racecar_amcl.launch">
      <arg name="r_name" value="$(arg r_name)1"/>
      <arg name="vesc_ns" value="$(arg vesc_ns)1"/>  
      <arg name="map_file" value="$(find racecar_mapping)/maps/$(arg world_name).yaml"/>
    </include>


    <!--The Move Car Node-->
    <include file="$(find racecar_move_car)/launch/racecar_move_car.launch" ns="/$(arg r_name)1">
      <arg name="r_name" value="$(arg r_name)1"/>
      <arg name="vesc_ns" value="$(arg vesc_ns)1"/>
      <arg name="max_vel" value="$(arg max_vel1)"/>
      <arg name="max_acc" value="$(arg max_acc1)"/>
      <arg name="use_comm_layer" value="$(arg use_comm_layer)"/>
    </include>

    <!--endTrackGoal Node-->
    <node name="simpleGoal" pkg="racecar_navigation" type="simpleGoal.py" output="screen" ns="/$(arg r_name)1">
    </node>

</launch>